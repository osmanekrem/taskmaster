/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _protectedRouteImport } from './routes/__protected'
import { Route as _authRouteImport } from './routes/__auth'
import { Route as _protectedIndexRouteImport } from './routes/__protected/index'
import { Route as _protectedSettingsRouteImport } from './routes/__protected/settings'
import { Route as _protectedDashboardRouteImport } from './routes/__protected/dashboard'
import { Route as _protected_adminRouteImport } from './routes/__protected/__admin'
import { Route as _authResetPasswordRouteImport } from './routes/__auth/reset-password'
import { Route as _authLoginRouteImport } from './routes/__auth/login'
import { Route as _authForgotPasswordRouteImport } from './routes/__auth/forgot-password'
import { Route as _protectedSettingsIndexRouteImport } from './routes/__protected/settings/index'
import { Route as _protectedSettingsTicketTypesRouteImport } from './routes/__protected/settings/ticket-types'
import { Route as _protectedSettingsProfileRouteImport } from './routes/__protected/settings/profile'
import { Route as _protected_adminUserManagementIndexRouteImport } from './routes/__protected/__admin/user-management/index'
import { Route as _protected_adminTemplateManagementIndexRouteImport } from './routes/__protected/__admin/template-management/index'
import { Route as _protectedSettingsTicketTypesIdRouteImport } from './routes/__protected/settings/ticket-types/$id'
import { Route as _protected_adminUserManagementCreateUserRouteImport } from './routes/__protected/__admin/user-management/create-user'
import { Route as _protected_adminTemplateManagementCreateTemplateRouteImport } from './routes/__protected/__admin/template-management/create-template'
import { Route as _protected_adminUserManagementEditUserIdRouteImport } from './routes/__protected/__admin/user-management/edit-user.$id'

const _protectedRoute = _protectedRouteImport.update({
  id: '/__protected',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRoute = _authRouteImport.update({
  id: '/__auth',
  getParentRoute: () => rootRouteImport,
} as any)
const _protectedIndexRoute = _protectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _protectedRoute,
} as any)
const _protectedSettingsRoute = _protectedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => _protectedRoute,
} as any)
const _protectedDashboardRoute = _protectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => _protectedRoute,
} as any)
const _protected_adminRoute = _protected_adminRouteImport.update({
  id: '/__admin',
  getParentRoute: () => _protectedRoute,
} as any)
const _authResetPasswordRoute = _authResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => _authRoute,
} as any)
const _authLoginRoute = _authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => _authRoute,
} as any)
const _authForgotPasswordRoute = _authForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => _authRoute,
} as any)
const _protectedSettingsIndexRoute = _protectedSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _protectedSettingsRoute,
} as any)
const _protectedSettingsTicketTypesRoute =
  _protectedSettingsTicketTypesRouteImport.update({
    id: '/ticket-types',
    path: '/ticket-types',
    getParentRoute: () => _protectedSettingsRoute,
  } as any)
const _protectedSettingsProfileRoute =
  _protectedSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => _protectedSettingsRoute,
  } as any)
const _protected_adminUserManagementIndexRoute =
  _protected_adminUserManagementIndexRouteImport.update({
    id: '/user-management/',
    path: '/user-management/',
    getParentRoute: () => _protected_adminRoute,
  } as any)
const _protected_adminTemplateManagementIndexRoute =
  _protected_adminTemplateManagementIndexRouteImport.update({
    id: '/template-management/',
    path: '/template-management/',
    getParentRoute: () => _protected_adminRoute,
  } as any)
const _protectedSettingsTicketTypesIdRoute =
  _protectedSettingsTicketTypesIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => _protectedSettingsTicketTypesRoute,
  } as any)
const _protected_adminUserManagementCreateUserRoute =
  _protected_adminUserManagementCreateUserRouteImport.update({
    id: '/user-management/create-user',
    path: '/user-management/create-user',
    getParentRoute: () => _protected_adminRoute,
  } as any)
const _protected_adminTemplateManagementCreateTemplateRoute =
  _protected_adminTemplateManagementCreateTemplateRouteImport.update({
    id: '/template-management/create-template',
    path: '/template-management/create-template',
    getParentRoute: () => _protected_adminRoute,
  } as any)
const _protected_adminUserManagementEditUserIdRoute =
  _protected_adminUserManagementEditUserIdRouteImport.update({
    id: '/user-management/edit-user/$id',
    path: '/user-management/edit-user/$id',
    getParentRoute: () => _protected_adminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/forgot-password': typeof _authForgotPasswordRoute
  '/login': typeof _authLoginRoute
  '/reset-password': typeof _authResetPasswordRoute
  '/dashboard': typeof _protectedDashboardRoute
  '/settings': typeof _protectedSettingsRouteWithChildren
  '/': typeof _protectedIndexRoute
  '/settings/profile': typeof _protectedSettingsProfileRoute
  '/settings/ticket-types': typeof _protectedSettingsTicketTypesRouteWithChildren
  '/settings/': typeof _protectedSettingsIndexRoute
  '/template-management/create-template': typeof _protected_adminTemplateManagementCreateTemplateRoute
  '/user-management/create-user': typeof _protected_adminUserManagementCreateUserRoute
  '/settings/ticket-types/$id': typeof _protectedSettingsTicketTypesIdRoute
  '/template-management': typeof _protected_adminTemplateManagementIndexRoute
  '/user-management': typeof _protected_adminUserManagementIndexRoute
  '/user-management/edit-user/$id': typeof _protected_adminUserManagementEditUserIdRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof _authForgotPasswordRoute
  '/login': typeof _authLoginRoute
  '/reset-password': typeof _authResetPasswordRoute
  '/dashboard': typeof _protectedDashboardRoute
  '/': typeof _protectedIndexRoute
  '/settings/profile': typeof _protectedSettingsProfileRoute
  '/settings/ticket-types': typeof _protectedSettingsTicketTypesRouteWithChildren
  '/settings': typeof _protectedSettingsIndexRoute
  '/template-management/create-template': typeof _protected_adminTemplateManagementCreateTemplateRoute
  '/user-management/create-user': typeof _protected_adminUserManagementCreateUserRoute
  '/settings/ticket-types/$id': typeof _protectedSettingsTicketTypesIdRoute
  '/template-management': typeof _protected_adminTemplateManagementIndexRoute
  '/user-management': typeof _protected_adminUserManagementIndexRoute
  '/user-management/edit-user/$id': typeof _protected_adminUserManagementEditUserIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__auth': typeof _authRouteWithChildren
  '/__protected': typeof _protectedRouteWithChildren
  '/__auth/forgot-password': typeof _authForgotPasswordRoute
  '/__auth/login': typeof _authLoginRoute
  '/__auth/reset-password': typeof _authResetPasswordRoute
  '/__protected/__admin': typeof _protected_adminRouteWithChildren
  '/__protected/dashboard': typeof _protectedDashboardRoute
  '/__protected/settings': typeof _protectedSettingsRouteWithChildren
  '/__protected/': typeof _protectedIndexRoute
  '/__protected/settings/profile': typeof _protectedSettingsProfileRoute
  '/__protected/settings/ticket-types': typeof _protectedSettingsTicketTypesRouteWithChildren
  '/__protected/settings/': typeof _protectedSettingsIndexRoute
  '/__protected/__admin/template-management/create-template': typeof _protected_adminTemplateManagementCreateTemplateRoute
  '/__protected/__admin/user-management/create-user': typeof _protected_adminUserManagementCreateUserRoute
  '/__protected/settings/ticket-types/$id': typeof _protectedSettingsTicketTypesIdRoute
  '/__protected/__admin/template-management/': typeof _protected_adminTemplateManagementIndexRoute
  '/__protected/__admin/user-management/': typeof _protected_adminUserManagementIndexRoute
  '/__protected/__admin/user-management/edit-user/$id': typeof _protected_adminUserManagementEditUserIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/dashboard'
    | '/settings'
    | '/'
    | '/settings/profile'
    | '/settings/ticket-types'
    | '/settings/'
    | '/template-management/create-template'
    | '/user-management/create-user'
    | '/settings/ticket-types/$id'
    | '/template-management'
    | '/user-management'
    | '/user-management/edit-user/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/dashboard'
    | '/'
    | '/settings/profile'
    | '/settings/ticket-types'
    | '/settings'
    | '/template-management/create-template'
    | '/user-management/create-user'
    | '/settings/ticket-types/$id'
    | '/template-management'
    | '/user-management'
    | '/user-management/edit-user/$id'
  id:
    | '__root__'
    | '/__auth'
    | '/__protected'
    | '/__auth/forgot-password'
    | '/__auth/login'
    | '/__auth/reset-password'
    | '/__protected/__admin'
    | '/__protected/dashboard'
    | '/__protected/settings'
    | '/__protected/'
    | '/__protected/settings/profile'
    | '/__protected/settings/ticket-types'
    | '/__protected/settings/'
    | '/__protected/__admin/template-management/create-template'
    | '/__protected/__admin/user-management/create-user'
    | '/__protected/settings/ticket-types/$id'
    | '/__protected/__admin/template-management/'
    | '/__protected/__admin/user-management/'
    | '/__protected/__admin/user-management/edit-user/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _authRoute: typeof _authRouteWithChildren
  _protectedRoute: typeof _protectedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__protected': {
      id: '/__protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _protectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__protected/': {
      id: '/__protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _protectedIndexRouteImport
      parentRoute: typeof _protectedRoute
    }
    '/__protected/settings': {
      id: '/__protected/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof _protectedSettingsRouteImport
      parentRoute: typeof _protectedRoute
    }
    '/__protected/dashboard': {
      id: '/__protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof _protectedDashboardRouteImport
      parentRoute: typeof _protectedRoute
    }
    '/__protected/__admin': {
      id: '/__protected/__admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _protected_adminRouteImport
      parentRoute: typeof _protectedRoute
    }
    '/__auth/reset-password': {
      id: '/__auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof _authResetPasswordRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/login': {
      id: '/__auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof _authLoginRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/forgot-password': {
      id: '/__auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof _authForgotPasswordRouteImport
      parentRoute: typeof _authRoute
    }
    '/__protected/settings/': {
      id: '/__protected/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof _protectedSettingsIndexRouteImport
      parentRoute: typeof _protectedSettingsRoute
    }
    '/__protected/settings/ticket-types': {
      id: '/__protected/settings/ticket-types'
      path: '/ticket-types'
      fullPath: '/settings/ticket-types'
      preLoaderRoute: typeof _protectedSettingsTicketTypesRouteImport
      parentRoute: typeof _protectedSettingsRoute
    }
    '/__protected/settings/profile': {
      id: '/__protected/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof _protectedSettingsProfileRouteImport
      parentRoute: typeof _protectedSettingsRoute
    }
    '/__protected/__admin/user-management/': {
      id: '/__protected/__admin/user-management/'
      path: '/user-management'
      fullPath: '/user-management'
      preLoaderRoute: typeof _protected_adminUserManagementIndexRouteImport
      parentRoute: typeof _protected_adminRoute
    }
    '/__protected/__admin/template-management/': {
      id: '/__protected/__admin/template-management/'
      path: '/template-management'
      fullPath: '/template-management'
      preLoaderRoute: typeof _protected_adminTemplateManagementIndexRouteImport
      parentRoute: typeof _protected_adminRoute
    }
    '/__protected/settings/ticket-types/$id': {
      id: '/__protected/settings/ticket-types/$id'
      path: '/$id'
      fullPath: '/settings/ticket-types/$id'
      preLoaderRoute: typeof _protectedSettingsTicketTypesIdRouteImport
      parentRoute: typeof _protectedSettingsTicketTypesRoute
    }
    '/__protected/__admin/user-management/create-user': {
      id: '/__protected/__admin/user-management/create-user'
      path: '/user-management/create-user'
      fullPath: '/user-management/create-user'
      preLoaderRoute: typeof _protected_adminUserManagementCreateUserRouteImport
      parentRoute: typeof _protected_adminRoute
    }
    '/__protected/__admin/template-management/create-template': {
      id: '/__protected/__admin/template-management/create-template'
      path: '/template-management/create-template'
      fullPath: '/template-management/create-template'
      preLoaderRoute: typeof _protected_adminTemplateManagementCreateTemplateRouteImport
      parentRoute: typeof _protected_adminRoute
    }
    '/__protected/__admin/user-management/edit-user/$id': {
      id: '/__protected/__admin/user-management/edit-user/$id'
      path: '/user-management/edit-user/$id'
      fullPath: '/user-management/edit-user/$id'
      preLoaderRoute: typeof _protected_adminUserManagementEditUserIdRouteImport
      parentRoute: typeof _protected_adminRoute
    }
  }
}

interface _authRouteChildren {
  _authForgotPasswordRoute: typeof _authForgotPasswordRoute
  _authLoginRoute: typeof _authLoginRoute
  _authResetPasswordRoute: typeof _authResetPasswordRoute
}

const _authRouteChildren: _authRouteChildren = {
  _authForgotPasswordRoute: _authForgotPasswordRoute,
  _authLoginRoute: _authLoginRoute,
  _authResetPasswordRoute: _authResetPasswordRoute,
}

const _authRouteWithChildren = _authRoute._addFileChildren(_authRouteChildren)

interface _protected_adminRouteChildren {
  _protected_adminTemplateManagementCreateTemplateRoute: typeof _protected_adminTemplateManagementCreateTemplateRoute
  _protected_adminUserManagementCreateUserRoute: typeof _protected_adminUserManagementCreateUserRoute
  _protected_adminTemplateManagementIndexRoute: typeof _protected_adminTemplateManagementIndexRoute
  _protected_adminUserManagementIndexRoute: typeof _protected_adminUserManagementIndexRoute
  _protected_adminUserManagementEditUserIdRoute: typeof _protected_adminUserManagementEditUserIdRoute
}

const _protected_adminRouteChildren: _protected_adminRouteChildren = {
  _protected_adminTemplateManagementCreateTemplateRoute:
    _protected_adminTemplateManagementCreateTemplateRoute,
  _protected_adminUserManagementCreateUserRoute:
    _protected_adminUserManagementCreateUserRoute,
  _protected_adminTemplateManagementIndexRoute:
    _protected_adminTemplateManagementIndexRoute,
  _protected_adminUserManagementIndexRoute:
    _protected_adminUserManagementIndexRoute,
  _protected_adminUserManagementEditUserIdRoute:
    _protected_adminUserManagementEditUserIdRoute,
}

const _protected_adminRouteWithChildren =
  _protected_adminRoute._addFileChildren(_protected_adminRouteChildren)

interface _protectedSettingsTicketTypesRouteChildren {
  _protectedSettingsTicketTypesIdRoute: typeof _protectedSettingsTicketTypesIdRoute
}

const _protectedSettingsTicketTypesRouteChildren: _protectedSettingsTicketTypesRouteChildren =
  {
    _protectedSettingsTicketTypesIdRoute: _protectedSettingsTicketTypesIdRoute,
  }

const _protectedSettingsTicketTypesRouteWithChildren =
  _protectedSettingsTicketTypesRoute._addFileChildren(
    _protectedSettingsTicketTypesRouteChildren,
  )

interface _protectedSettingsRouteChildren {
  _protectedSettingsProfileRoute: typeof _protectedSettingsProfileRoute
  _protectedSettingsTicketTypesRoute: typeof _protectedSettingsTicketTypesRouteWithChildren
  _protectedSettingsIndexRoute: typeof _protectedSettingsIndexRoute
}

const _protectedSettingsRouteChildren: _protectedSettingsRouteChildren = {
  _protectedSettingsProfileRoute: _protectedSettingsProfileRoute,
  _protectedSettingsTicketTypesRoute:
    _protectedSettingsTicketTypesRouteWithChildren,
  _protectedSettingsIndexRoute: _protectedSettingsIndexRoute,
}

const _protectedSettingsRouteWithChildren =
  _protectedSettingsRoute._addFileChildren(_protectedSettingsRouteChildren)

interface _protectedRouteChildren {
  _protected_adminRoute: typeof _protected_adminRouteWithChildren
  _protectedDashboardRoute: typeof _protectedDashboardRoute
  _protectedSettingsRoute: typeof _protectedSettingsRouteWithChildren
  _protectedIndexRoute: typeof _protectedIndexRoute
}

const _protectedRouteChildren: _protectedRouteChildren = {
  _protected_adminRoute: _protected_adminRouteWithChildren,
  _protectedDashboardRoute: _protectedDashboardRoute,
  _protectedSettingsRoute: _protectedSettingsRouteWithChildren,
  _protectedIndexRoute: _protectedIndexRoute,
}

const _protectedRouteWithChildren = _protectedRoute._addFileChildren(
  _protectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  _authRoute: _authRouteWithChildren,
  _protectedRoute: _protectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
